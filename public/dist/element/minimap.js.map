{"version":3,"sources":["../__generated__/elementMinimapApp.js","../ElementFinder.js","../elementMinimapBlock.js","../elementMinimapHighlight.js","../elementMinimapScale.js","../elementMinimapTriggerHover.js"],"names":[],"mappings":"AAAA;AAAA,IAAA,oBAAA,QAAA,OAAA,qBAAA;ACAA,kBAAA,QAAA,iBAAA,WAAA;EAEA,OACA,CAAA,KAAA,SAAA,SAAA,YAAA;MACA,aAAA,WAAA;MACA,IAAA,QAAA,EAAA,SAAA,KAAA;MAEA,OAAA,CAAA,MAAA,UAAA,WAAA,QAAA;QACA,IAAA,SAAA,WAAA,MAAA;QACA,OAAA;QACA,aAAA,OAAA,KAAA,KAAA;QACA,QAAA,EAAA,SAAA,KAAA;;MAGA,OAAA,CAAA,MAAA,GAAA,eAAA,QAAA,IAAA,OAAA,QAAA;QACA,QAAA,MAAA;;MAGA,OAAA;;;AClBA,kBAAA,UAAA,oBAAA,SAAA,QAAA;EAEA,OAAA;IACA,OACA,CAAA,MAAA;IAEA,MAAA,SAAA,SAAA,OAAA,SAAA,OAAA;MACA,QAAA,SAAA;MACA,IAAA,QAAA,EAAA,YAAA,MAAA;MAEA,QAAA,GAAA,SAAA,SAAA,GAAA;QACA,EAAA;QACA,MAAA,OAAA,WAAA;UACA,IAAA,SAAA,OAAA,WAAA;YACA,OAAA,OAAA;iBACA;YACA,OAAA,IAAA,OAAA,MAAA;;;;MAKA,MAAA,OAAA,WAAA;QACA,OAAA,OAAA;SACA,WAAA;QACA,IAAA,SAAA,OAAA,WAAA;UACA,QAAA,SAAA;eACA;UACA,QAAA,YAAA;;;;;;AC3BA,kBAAA,UAAA,2DAAA,SAAA,YAAA,eAAA;EAEA,OACA,CAAA,MAAA,SAAA,SAAA,OAAA,SAAA,OAAA;MACA,MAAA,OAAA,WAAA;QACA,OAAA,WAAA;SACA,SAAA,UAAA;QACA,EAAA,SAAA,KAAA,uBAAA,YAAA;QAEA,IAAA,UAAA;UACA,IAAA,QAAA,cAAA,IAAA,SAAA;UAEA,MAAA,SAAA;;;;;ACZA,kBAAA,UAAA,+DAAA,SAAA,cAAA,SAAA,UAAA;EAEA,OAAA;IACA,OACA,CAAA,SAAA;IAEA,MAAA,SAAA,SAAA,OAAA,SAAA,OAAA;MACA,aAAA,SAAA;MACA,MAAA,OAAA,WAAA;QACA,OAAA,aAAA,OAAA,UAAA;SACA,WAAA;QACA,SAAA,IAAA,EAAA,SAAA,KAAA,eAAA;UACA,OAAA,MAAA,SAAA;UACA,SAAA;;QAEA,SAAA,IAAA,QAAA,GAAA,YAAA;UACA,OAAA;UACA,UAAA;;;;;;ACjBA,kBAAA,UAAA,6CAAA,SAAA,YAAA;EAEA,OAAA;IACA,OACA,CAAA,WAAA;IAEA,MAAA,SAAA,SAAA,OAAA,SAAA,OAAA;MACA,EAAA,SAAA,MAAA,WAAA;QACA,MAAA,OAAA,WAAA;UACA,WAAA,oBAAA,MAAA;;SAEA,WAAA;QACA,MAAA,OAAA,WAAA;UACA,WAAA,oBAAA;;;;;;AAMA","file":"element/minimap.js","sourcesContent":["var elementMinimapApp = angular.module('elementMinimapApp',[]);","elementMinimapApp.factory('ElementFinder', function() {\n\n  return {\n    get: function(element, identifier) {\n      identifier = identifier.compact();\n      var found = $(element).find(identifier);\n\n      while (!found.length && identifier.length) {\n        var pieces = identifier.split(' ');\n        pieces.pop();\n        identifier = pieces.join(' ').compact();\n        found = $(element).find(identifier);\n      }\n\n      while (!found.is(':visible') && element.has(found).length) {\n        found = found.parent();\n      }\n\n      return found;\n    }\n  };\n\n});","elementMinimapApp.directive('block', function(Blocks) {\n\n  return {\n    scope: {\n      'id': '@block'\n    },\n    link: function postLink(scope, element, attrs) {\n      element.addClass('block');\n      var index = $('*[block]').index(element);\n\n      element.on('click', function(e) {\n        e.preventDefault();\n        scope.$apply(function() {\n          if (index in Blocks.container) {\n            Blocks.remove(index);\n          } else {\n            Blocks.add(index, scope.id);\n          }\n        });\n      });\n\n      scope.$watch(function() {\n        return Blocks.timestamp;\n      }, function() {\n        if (index in Blocks.container) {\n          element.addClass('block--active');\n        } else {\n          element.removeClass('block--active');\n        }\n      });\n    }\n  };\n\n});","elementMinimapApp.directive('elementMinimapHighlight', function(HoverField, ElementFinder) {\n\n  return {\n    link: function postLink(scope, element, attrs) {\n      scope.$watch(function() {\n        return HoverField.currentIdentifier;\n      }, function(newValue) {\n        $(element).find('.minimap__highlight').removeClass('minimap__highlight');\n\n        if (newValue) {\n          var found = ElementFinder.get(element, newValue);\n\n          found.addClass('minimap__highlight');\n        }\n      });\n    }\n  };\n\n});","elementMinimapApp.directive('elementMinimapScale', function(EventWatcher, $window, TweenMax) {\n\n  return {\n    scope: {\n      'scale': '=elementMinimapScale'\n    },\n    link: function postLink(scope, element, attrs) {\n      EventWatcher.addEvent('resize');\n      scope.$watch(function() {\n        return EventWatcher.events['resize'].timeStamp;\n      }, function() {\n        TweenMax.set($(element).find('#container'), {\n          scale: scope.scale || .25,\n          force3D: true\n        });\n        TweenMax.set(element[0].parentNode, {\n          width: '100%',\n          position: 'fixed'\n        });\n      });\n    }\n  };\n\n});","elementMinimapApp.directive('elementMinimapTriggerHover', function(HoverField) {\n\n  return {\n    scope: {\n      'trigger': '=elementMinimapTriggerHover'\n    },\n    link: function postLink(scope, element, attrs) {\n      $(element).hover(function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = scope.trigger;\n        });\n      }, function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = '';\n        });\n      });\n    }\n  };\n\n});"],"sourceRoot":"/source/"}