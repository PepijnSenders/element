{"version":3,"sources":["../__generated__/elementMinimapApp.js","../cmsBlock.js","../cmsMinimapHighlight.js","../cmsMinimapScale.js"],"names":[],"mappings":"AAAA;AAAA,IAAA,oBAAA,QAAA,OAAA,qBAAA,CAAA,mBAAA;ACAA,cAAA,UAAA,oBAAA,SAAA,QAAA;EAEA,OAAA;IACA,OACA,CAAA,MAAA;IAEA,MAAA,SAAA,SAAA,OAAA,SAAA,OAAA;MACA,QAAA,SAAA;MACA,IAAA,QAAA,EAAA,YAAA,MAAA;MAEA,QAAA,GAAA,SAAA,SAAA,GAAA;QACA,EAAA;QACA,MAAA,OAAA,WAAA;UACA,IAAA,SAAA,OAAA,WAAA;YACA,OAAA,OAAA;iBACA;YACA,OAAA,IAAA,OAAA,MAAA;;;;MAKA,MAAA,OAAA,WAAA;QACA,OAAA,OAAA;SACA,WAAA;QACA,IAAA,SAAA,OAAA,WAAA;UACA,QAAA,SAAA;eACA;UACA,QAAA,YAAA;;;;;;AC3BA,cAAA,UAAA,sCAAA,SAAA,YAAA;EAEA,OACA,CAAA,MAAA,SAAA,SAAA,OAAA,SAAA,OAAA;MACA,IAAA,gBAAA,SAAA,YAAA;QACA,IAAA,QAAA,QAAA,KAAA;QACA,OAAA,CAAA,MAAA,UAAA,OAAA,eAAA,UAAA;UACA,IAAA,SAAA,WAAA,MAAA;UACA,IAAA,OAAA,WAAA,UAAA;YACA,OAAA;YACA,aAAA,OAAA,KAAA;YACA,QAAA,QAAA,KAAA;;;QAGA,OAAA;;MAGA,IAAA;MACA,MAAA,OAAA,WAAA;QACA,OAAA,WAAA;SACA,SAAA,UAAA;QACA,IAAA,UAAA;UACA,IAAA,aAAA;YACA,YAAA,YAAA;;UAEA,cAAA,cAAA;UACA,YAAA,SAAA;;;;;AC1BA,cAAA,UAAA,2DAAA,SAAA,cAAA,SAAA,UAAA;EAEA,OACA,CAAA,MAAA,SAAA,SAAA,OAAA,SAAA,OAAA;MACA,aAAA,SAAA;MACA,MAAA,OAAA,WAAA;QACA,OAAA,aAAA,OAAA,UAAA;SACA,WAAA;QACA,SAAA,IAAA,QAAA,KAAA,eAAA;UACA,OAAA,MAAA,QAAA,aAAA,QAAA;UACA,SAAA;;QAEA,SAAA,IAAA,QAAA,GAAA,YAAA;UACA,OAAA;UACA,UAAA;;;;;AAMA","file":"element/minimap.js","sourcesContent":["var elementMinimapApp = angular.module('elementMinimapApp',[\"eventwatcherApp\",\"tweenmaxApp\"]);","cmsMinimapApp.directive('block', function(Blocks) {\n\n  return {\n    scope: {\n      'id': '@block'\n    },\n    link: function postLink(scope, element, attrs) {\n      element.addClass('block');\n      var index = $('*[block]').index(element);\n\n      element.on('click', function(e) {\n        e.preventDefault();\n        scope.$apply(function() {\n          if (index in Blocks.container) {\n            Blocks.remove(index);\n          } else {\n            Blocks.add(index, scope.id);\n          }\n        });\n      });\n\n      scope.$watch(function() {\n        return Blocks.timestamp;\n      }, function() {\n        if (index in Blocks.container) {\n          element.addClass('block--active');\n        } else {\n          element.removeClass('block--active');\n        }\n      });\n    }\n  };\n\n});","cmsMinimapApp.directive('cmsMinimapHighlight', function(HoverField) {\n\n  return {\n    link: function postLink(scope, element, attrs) {\n      var elementFinder = function(identifier) {\n        var found = element.find(identifier);\n        while (!found.length && typeof identifier === 'string') {\n          var pieces = identifier.split(' ');\n          if (typeof pieces === 'object') {\n            pieces.pop();\n            identifier = pieces.join(' ');\n            found = element.find(identifier);\n          }\n        }\n        return found;\n      };\n\n      var lastElement;\n      scope.$watch(function() {\n        return HoverField.currentIdentifier;\n      }, function(newValue) {\n        if (newValue) {\n          if (lastElement) {\n            lastElement.removeClass('minimap__highlight');\n          }\n          lastElement = elementFinder(newValue);\n          lastElement.addClass('minimap__highlight');\n        }\n      });\n    }\n  };\n\n});","cmsMinimapApp.directive('cmsMinimapScale', function(EventWatcher, $window, TweenMax) {\n\n  return {\n    link: function postLink(scope, element, attrs) {\n      EventWatcher.addEvent('resize');\n      scope.$watch(function() {\n        return EventWatcher.events['resize'].timeStamp;\n      }, function() {\n        TweenMax.set(element.find('#container'), {\n          scale: .25 * $window.innerWidth / $window.innerWidth,\n          force3D: true\n        });\n        TweenMax.set(element[0].parentNode, {\n          width: '100%',\n          position: 'fixed'\n        });\n      });\n    }\n  };\n\n});"],"sourceRoot":"/source/"}