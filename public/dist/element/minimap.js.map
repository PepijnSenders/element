{"version":3,"sources":["../__generated__/elementMinimapApp.js","../MinimapBlocksCtrl.js","../ElementFinder.js","../Identify.js","../elementMinimapBlock.js","../elementMinimapHighlight.js","../elementMinimapScale.js","../elementMinimapTriggerHover.js"],"names":[],"mappings":"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","file":"element/minimap.js","sourcesContent":["var elementMinimapApp = angular.module('elementMinimapApp',[]);","elementMinimapApp.controller('MinimapBlocksCtrl', function($scope, SweetAlert, ElementFinder, Identify) {\n\n  $scope.blocks = {\n    identifiers: []\n  };\n\n  $scope.addIdentifier = function(identifier) {\n    if (!!~$scope.blocks.identifiers.indexOf(identifier)) {\n      SweetAlert.swal('You cannot add one block twice.')\n    } else {\n      $scope.blocks.identifiers.push(identifier);\n    }\n  };\n\n  $scope.$watch('blocks.identifiers.length', function() {\n    $scope.blocks.joined = $scope.blocks.identifiers.join(', ');\n  });\n\n  $scope.search = function(identifier) {\n    var container = $('#blocks-minimap');\n\n    var found = ElementFinder.get(container, identifier);\n\n    if (found.length > 1) {\n      SweetAlert.swal('More than one element with that identifier, please be more specific.');\n    } else if (found.length === 1) {\n      $scope.addIdentifier(Identify.element(found, container.find('.minimap__scale')));\n    } else {\n      SweetAlert.swal('Cannot find element.');\n    }\n  };\n\n});","elementMinimapApp.factory('ElementFinder', function() {\n\n  return {\n    get: function(element, identifier) {\n      identifier = identifier.compact();\n      var found = $(element).find(identifier);\n\n      while (!found.length && identifier.length) {\n        var pieces = identifier.split(' ');\n        pieces.pop();\n        identifier = pieces.join(' ').compact();\n        found = $(element).find(identifier);\n      }\n\n      while (!found.is(':visible') && $(element).has(found).length) {\n        found = found.parent();\n      }\n\n      return found;\n    }\n  };\n\n});","elementMinimapApp.factory('Identify', function() {\n\n  return {\n    element: function(element, container) {\n      if (!(element instanceof $)) {\n        element = $(element);\n      }\n\n      var id = element.attr('id');\n      if (id && !id.startsWith('minimap-')) {\n        return '#' + id;\n      } else {\n        var identifier = '';\n        while (element.length && container.has(element).length) {\n          var id = element.attr('id');\n          if (id && !id.startsWith('minimap-')) {\n            identifier = '#' + id + ' ' + identifier;\n          } else if (element[0].className) {\n            identifier = '.' + element[0].className.split(' ').join('.') + ' ' + identifier;\n          }\n          element = element.parent();\n        }\n\n        return identifier;\n      }\n    }\n  };\n\n});","elementMinimapApp.directive('block', function(Blocks) {\n\n  return {\n    scope: {\n      'id': '@block'\n    },\n    link: function postLink(scope, element, attrs) {\n      element.addClass('block');\n      var index = $('*[block]').index(element);\n\n      element.on('click', function(e) {\n        e.preventDefault();\n        scope.$apply(function() {\n          if (index in Blocks.container) {\n            Blocks.remove(index);\n          } else {\n            Blocks.add(index, scope.id);\n          }\n        });\n      });\n\n      scope.$watch(function() {\n        return Blocks.timestamp;\n      }, function() {\n        if (index in Blocks.container) {\n          element.addClass('block--active');\n        } else {\n          element.removeClass('block--active');\n        }\n      });\n    }\n  };\n\n});","elementMinimapApp.directive('elementMinimapHighlight', function(HoverField, ElementFinder) {\n\n  return {\n    link: function postLink(scope, element, attrs) {\n      scope.$watch(function() {\n        return HoverField.currentIdentifier;\n      }, function(newValue) {\n        $(element).find('.minimap__highlight').removeClass('minimap__highlight');\n\n        if (newValue) {\n          var found = ElementFinder.get(element, newValue);\n\n          found.addClass('minimap__highlight');\n        }\n      });\n    }\n  };\n\n});","elementMinimapApp.directive('elementMinimapScale', function(EventWatcher, $window, TweenMax) {\n\n  return {\n    scope: {\n      'scale': '=elementMinimapScale'\n    },\n    link: function postLink(scope, element, attrs) {\n      EventWatcher.addEvent('resize');\n      scope.$watch(function() {\n        return EventWatcher.events['resize'].timeStamp;\n      }, function() {\n        TweenMax.set($(element).find('#container'), {\n          scale: scope.scale || .25,\n          force3D: true\n        });\n        TweenMax.set(element[0].parentNode, {\n          width: '100%',\n          position: 'fixed'\n        });\n      });\n    }\n  };\n\n});","elementMinimapApp.directive('elementMinimapTriggerHover', function(HoverField) {\n\n  return {\n    scope: {\n      'trigger': '=elementMinimapTriggerHover'\n    },\n    link: function postLink(scope, element, attrs) {\n      element.on('mouseenter', function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = scope.trigger;\n        });\n      });\n\n      element.on('mouseleave', function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = '';\n        });\n      });\n    }\n  };\n\n});"],"sourceRoot":"/source/"}