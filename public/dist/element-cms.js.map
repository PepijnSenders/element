{"version":3,"sources":["__generated__/elementCmsApp.js","config.js","BlocksCtrl.js","EditCtrl.js","InputCtrl.js","Blocks.js","Editable.js","Field.js","History.js","element-cms.js","HoverField.js","Input.js","Locale.js","types/cmsInput.js","types/cmsTextarea.js","cmsField.js","cmsHistory.js","title.js","__generated__/templateCache.js"],"names":[],"mappings":"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","file":"element-cms.js","sourcesContent":["var elementCmsApp = angular.module('elementCmsApp',[\"elementCmsMinimapApp\"]);","cmsApp.constant('MODULE_BASE', 'modules/cms/views');\n\ncmsApp.run(function($rootScope) {\n\n  var events = [\n    'header.expand'\n  ];\n\n  events.forEach(function(event) {\n    $rootScope.$on(event, function(e, data) {\n      $rootScope.$broadcast(`down-${event}`, data);\n    });\n  });\n\n});","cmsApp.controller('BlocksCtrl', function(Blocks, $scope) {\n\n  $scope.blocks = Blocks.container;\n\n  $scope.close = function(block) {\n    for (var index in Blocks.container) {\n      var _block = Blocks.container[index];\n      if (_block === block) {\n        Blocks.remove(index);\n      }\n    }\n  };\n\n});","cmsApp.controller('EditCtrl', function($scope, Editable) {\n\n  $scope.getForBlock = function(block) {\n    Editable.getForBlock(block)\n      .then(function(editables) {\n        $scope.editables = editables;\n      });\n  };\n\n});","cmsApp.controller('InputCtrl', function($scope, Field, History, Locale, $q) {\n\n  this.init = function() {\n    $scope.disabled = true;\n\n    return Field.translation($scope.global.key, Locale.language, Locale.region)\n      .then(function(translation) {\n        lastValue = translation;\n        $scope.input = {\n          value: translation\n        };\n        $scope.disabled = false;\n\n        return translation;\n      });\n  };\n\n  var lastValue;\n  this.update = function() {\n    if ($scope.input.value === lastValue) {\n      return $q.when();\n    }\n\n    lastValue = $scope.input.value;\n    delete $scope.histories;\n    $scope.disabled = true;\n\n    return Field.save($scope.global.key, Locale.language, Locale.region, $scope.input.value)\n      .then(function(translation) {\n        $scope.input.value = translation;\n        $scope.disabled = false;\n\n        return translation;\n      });\n  };\n\n  var historyPage = 1;\n  this.history = function() {\n    if ($scope.histories) {\n      delete $scope.histories;\n\n      return $q.when();\n    } else {\n      historyPage = 1;\n      return History.getByKey($scope.global.key)\n        .then(function(histories) {\n          $scope.histories = histories.data;\n\n          return histories;\n        });\n    }\n  };\n\n  this.loadMoreHistories = function() {\n    historyPage++;\n    return History.getByKey($scope.global.key, historyPage)\n      .then(function(histories) {\n        $scope.histories = $scope.histories.concat(histories.data);\n\n        return histories;\n      });\n  };\n\n});","cmsApp.factory('Blocks', function() {\n\n  return {\n    container: {},\n    timestamp: Date.now(),\n    update: function() {\n      this.timestamp = Date.now();\n    },\n    add: function(index, block) {\n      this.container[index] = block;\n      this.update();\n    },\n    remove: function(index) {\n      delete this.container[index];\n      this.update();\n    }\n  };\n\n});","cmsApp.factory('Editable', function($http, EDITABLE_GET_FOR_BLOCK) {\n\n  return {\n    getForBlock: function(block) {\n      return $http({\n        method: 'GET',\n        url: EDITABLE_GET_FOR_BLOCK,\n        params: {\n          block: block\n        }\n      }).then(function(response) {\n        return response.data.globals;\n      });\n    }\n  };\n\n});","cmsApp.factory('Field', function($http, FIELD_GET, FIELD_TRANSLATION, FIELD_SAVE, Locale) {\n\n  return {\n    get: function(key) {\n      return $http({\n        method: 'GET',\n        url: FIELD_GET,\n        params: {\n          key: key\n        }\n      }).then(function(response) {\n        return response.data.field;\n      });\n    },\n    translation: function(key, language, region) {\n      return $http({\n        method: 'GET',\n        url: FIELD_TRANSLATION,\n        params: {\n          key: key,\n          locale: Locale.createLocale(language, region)\n        }\n      }).then(function(response) {\n        return response.data.translation;\n      });\n    },\n    save: function(key, language, region, value) {\n      return $http({\n        method: 'POST',\n        url: FIELD_SAVE,\n        params: {\n          key: key,\n          locale: Locale.createLocale(language, region),\n          value: value\n        }\n      }).then(function(response) {\n        return response.data.translation;\n      });\n    }\n  };\n\n});","cmsApp.factory('History', function($http, HISTORY_GET_KEY) {\n\n  return {\n    getByKey: function(key, page = 1, count = 10) {\n      return $http({\n        url: HISTORY_GET_KEY,\n        params: {\n          key: key,\n          page: page,\n          count: count\n        },\n        method: 'GET'\n      }).then(function(response) {\n        return response.data.histories;\n      });\n    }\n  };\n\n});","\"use strict\";\nvar elementCmsApp = angular.module('elementCmsApp', [\"elementCmsMinimapApp\"]);\ncmsApp.constant('MODULE_BASE', 'modules/cms/views');\ncmsApp.run(function($rootScope) {\n  var events = ['header.expand'];\n  events.forEach(function(event) {\n    $rootScope.$on(event, function(e, data) {\n      $rootScope.$broadcast((\"down-\" + event), data);\n    });\n  });\n});\ncmsApp.controller('BlocksCtrl', function(Blocks, $scope) {\n  $scope.blocks = Blocks.container;\n  $scope.close = function(block) {\n    for (var index in Blocks.container) {\n      var _block = Blocks.container[index];\n      if (_block === block) {\n        Blocks.remove(index);\n      }\n    }\n  };\n});\ncmsApp.controller('EditCtrl', function($scope, Editable) {\n  $scope.getForBlock = function(block) {\n    Editable.getForBlock(block).then(function(editables) {\n      $scope.editables = editables;\n    });\n  };\n});\ncmsApp.controller('InputCtrl', function($scope, Field, History, Locale, $q) {\n  this.init = function() {\n    $scope.disabled = true;\n    return Field.translation($scope.global.key, Locale.language, Locale.region).then(function(translation) {\n      lastValue = translation;\n      $scope.input = {value: translation};\n      $scope.disabled = false;\n      return translation;\n    });\n  };\n  var lastValue;\n  this.update = function() {\n    if ($scope.input.value === lastValue) {\n      return $q.when();\n    }\n    lastValue = $scope.input.value;\n    delete $scope.histories;\n    $scope.disabled = true;\n    return Field.save($scope.global.key, Locale.language, Locale.region, $scope.input.value).then(function(translation) {\n      $scope.input.value = translation;\n      $scope.disabled = false;\n      return translation;\n    });\n  };\n  var historyPage = 1;\n  this.history = function() {\n    if ($scope.histories) {\n      delete $scope.histories;\n      return $q.when();\n    } else {\n      historyPage = 1;\n      return History.getByKey($scope.global.key).then(function(histories) {\n        $scope.histories = histories.data;\n        return histories;\n      });\n    }\n  };\n  this.loadMoreHistories = function() {\n    historyPage++;\n    return History.getByKey($scope.global.key, historyPage).then(function(histories) {\n      $scope.histories = $scope.histories.concat(histories.data);\n      return histories;\n    });\n  };\n});\ncmsApp.factory('Blocks', function() {\n  return {\n    container: {},\n    timestamp: Date.now(),\n    update: function() {\n      this.timestamp = Date.now();\n    },\n    add: function(index, block) {\n      this.container[index] = block;\n      this.update();\n    },\n    remove: function(index) {\n      delete this.container[index];\n      this.update();\n    }\n  };\n});\ncmsApp.factory('Editable', function($http, EDITABLE_GET_FOR_BLOCK) {\n  return {getForBlock: function(block) {\n      return $http({\n        method: 'GET',\n        url: EDITABLE_GET_FOR_BLOCK,\n        params: {block: block}\n      }).then(function(response) {\n        return response.data.globals;\n      });\n    }};\n});\ncmsApp.factory('Field', function($http, FIELD_GET, FIELD_TRANSLATION, FIELD_SAVE, Locale) {\n  return {\n    get: function(key) {\n      return $http({\n        method: 'GET',\n        url: FIELD_GET,\n        params: {key: key}\n      }).then(function(response) {\n        return response.data.field;\n      });\n    },\n    translation: function(key, language, region) {\n      return $http({\n        method: 'GET',\n        url: FIELD_TRANSLATION,\n        params: {\n          key: key,\n          locale: Locale.createLocale(language, region)\n        }\n      }).then(function(response) {\n        return response.data.translation;\n      });\n    },\n    save: function(key, language, region, value) {\n      return $http({\n        method: 'POST',\n        url: FIELD_SAVE,\n        params: {\n          key: key,\n          locale: Locale.createLocale(language, region),\n          value: value\n        }\n      }).then(function(response) {\n        return response.data.translation;\n      });\n    }\n  };\n});\ncmsApp.factory('History', function($http, HISTORY_GET_KEY) {\n  return {getByKey: function(key) {\n      var page = arguments[1] !== (void 0) ? arguments[1] : 1;\n      var count = arguments[2] !== (void 0) ? arguments[2] : 10;\n      return $http({\n        url: HISTORY_GET_KEY,\n        params: {\n          key: key,\n          page: page,\n          count: count\n        },\n        method: 'GET'\n      }).then(function(response) {\n        return response.data.histories;\n      });\n    }};\n});\ncmsApp.factory('HoverField', function() {\n  return {currentIdentifier: ''};\n});\ncmsApp.factory('Input', function() {\n  return function postLink(scope, element, attrs, ctrl) {\n    ctrl.init();\n    scope.history = function() {\n      return ctrl.history();\n    };\n    scope.update = function() {\n      return ctrl.update();\n    };\n    scope.loadMoreHistories = function() {\n      return ctrl.loadMoreHistories();\n    };\n  };\n});\ncmsApp.factory('Locale', function() {\n  return {\n    language: 'nl',\n    region: 'NL',\n    createLocale: function(language, region) {\n      return (language + \"_\" + region);\n    }\n  };\n});\ncmsApp.directive('cmsInput', function(MODULE_BASE, Input) {\n  return {\n    scope: {'global': '=cmsInput'},\n    templateUrl: MODULE_BASE + '/cms-input.html',\n    controller: 'InputCtrl',\n    link: Input\n  };\n});\ncmsApp.directive('cmsTextarea', function(MODULE_BASE, Input) {\n  return {\n    scope: {'global': '=cmsTextarea'},\n    templateUrl: MODULE_BASE + '/cms-textarea.html',\n    controller: 'InputCtrl',\n    link: Input\n  };\n});\ncmsApp.directive('cmsField', function(Field, MODULE_BASE, HoverField) {\n  return {\n    scope: {global: '=cmsField'},\n    templateUrl: MODULE_BASE + '/cms-field.html',\n    link: function postLink(scope, element, attrs) {\n      var getType = function(translation) {\n        if (typeof translation === 'string') {\n          if (translation.length > 50) {\n            return 'textarea';\n          } else {\n            return 'input';\n          }\n          if (scope.global.key.endsWith('image') || scope.global.key.endsWith('image')) {\n            return 'img';\n          } else {\n            return 'link';\n          }\n        } else if (typeof translation === 'object' && scope.global.key.match('slider')) {\n          return 'slider-collection';\n        } else {\n          return 'specs-list';\n        }\n      };\n      scope.type = getType(scope.global.translation);\n      element.hover(function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = scope.global.key;\n        });\n      }, function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = '';\n        });\n      });\n    }\n  };\n});\ncmsApp.directive('cmsHistory', function(MODULE_BASE, USER_SHOW) {\n  return {\n    scope: {'histories': '=cmsHistory'},\n    templateUrl: MODULE_BASE + '/cms-history.html',\n    link: function postLink(scope, element, attrs) {\n      scope.linkBase = USER_SHOW + '/';\n      scope.loadMore = function() {\n        scope.$parent.loadMoreHistories().then(function(histories) {\n          scope.finished = histories.current_page === histories.last_page;\n        });\n      };\n      scope.$watch('histories.length', function(newValue) {\n        if (newValue === void 0) {\n          scope.finished = false;\n        }\n      });\n    }\n  };\n});\ncmsApp.filter('title', function() {\n  return function(input) {\n    var pieces = input.split('.');\n    input = pieces[pieces.length - 1];\n    return input.replace(/\\#/g, ' ').titleize();\n  };\n});\nangular.module(\"elementCmsApp\").run(['$templateCache', function(a) {\n  a.put('/modules/element-cms/views/cms-textarea.html', '<div class=\"input-group\">\\n' + '  <textarea type=\"text\" ng-disabled=\"disabled\" class=\"form-control\" id=\"{{ field.key }}\" ng-model=\"input.value\"></textarea>\\n' + '  <div class=\"input-group-addon btn-info btn\" ng-click=\"history();\">\\n' + '    History\\n' + '  </div>\\n' + '  <div class=\"input-group-addon btn btn-success\" ng-click=\"update();\">\\n' + '    Save\\n' + '  </div>\\n' + '</div>\\n' + '<div cms-history=\"histories\"></div>');\n  a.put('/modules/element-cms/views/cms-input.html', '<div class=\"input-group\">\\n' + '  <input type=\"text\" class=\"form-control\" id=\"{{ field.key }}\" ng-disabled=\"disabled\" ng-model=\"input.value\">\\n' + '  <div class=\"input-group-addon btn-info btn\" ng-click=\"history();\">\\n' + '    History\\n' + '  </div>\\n' + '  <div class=\"input-group-addon btn-success btn\" ng-click=\"update();\">\\n' + '    Save\\n' + '  </div>\\n' + '</div>\\n' + '<div cms-history=\"histories\"></div>');\n  a.put('/modules/element-cms/views/cms-history.html', '<ul ng-if=\"histories.length\" class=\"history-list\">\\n' + '  <li ng-repeat=\"history in histories\" class=\"history-list__item\">\\n' + '    <samp ng-bind=\"history.created_at\"></samp>: <a target=\"_blank\" ng-bind=\"history.user\" ng-href=\"{{linkBase + history.user}}\"></a> edited to <span ng-bind=\"history.value\"></span>\\n' + '  </li>\\n' + '  <li>\\n' + '    <a ng-click=\"loadMore();\" ng-if=\"!finished\">Load more</a>\\n' + '  </li>\\n' + '</ul>\\n' + '<div class=\"history-list\" ng-if=\"histories && !histories.length\">\\n' + '  No recent history on this field.\\n' + '</div>');\n  a.put('/modules/element-cms/views/cms-field.html', '<td class=\"col-sm-3\">\\n' + '  <label for=\"global.key\" ng-bind=\"global.key | title\"></label>\\n' + '</td>\\n' + '<td ng-switch=\"type\" class=\"col-sm-9\">\\n' + '  <div ng-switch-when=\"input\" cms-input=\"global\"></div>\\n' + '  <div ng-switch-when=\"textarea\" cms-textarea=\"global\"></div>\\n' + '</td>');\n}]);\n","cmsApp.factory('HoverField', function() {\n\n  return {\n    currentIdentifier: ''\n  };\n\n});","cmsApp.factory('Input', function() {\n\n  return function postLink(scope, element, attrs, ctrl) {\n    ctrl.init();\n\n    scope.history = function() {\n      return ctrl.history();\n    };\n\n    scope.update = function() {\n      return ctrl.update();\n    };\n\n    scope.loadMoreHistories = function() {\n      return ctrl.loadMoreHistories();\n    };\n  };\n\n});","cmsApp.factory('Locale', function() {\n\n  return {\n    language: 'nl',\n    region: 'NL',\n    createLocale: function(language, region) {\n      return `${language}_${region}`;\n    }\n  };\n\n});","cmsApp.directive('cmsInput', function(MODULE_BASE, Input) {\n\n  return {\n    scope: {\n      'global': '=cmsInput'\n    },\n    templateUrl: MODULE_BASE + '/cms-input.html',\n    controller: 'InputCtrl',\n    link: Input\n  };\n\n});","cmsApp.directive('cmsTextarea', function(MODULE_BASE, Input) {\n\n  return {\n    scope: {\n      'global': '=cmsTextarea'\n    },\n    templateUrl: MODULE_BASE + '/cms-textarea.html',\n    controller: 'InputCtrl',\n    link: Input\n  };\n\n});","cmsApp.directive('cmsField', function(Field, MODULE_BASE, HoverField) {\n\n  return {\n    scope: {\n      global: '=cmsField'\n    },\n    templateUrl: MODULE_BASE + '/cms-field.html',\n    link: function postLink(scope, element, attrs) {\n      var getType = function(translation) {\n        if (typeof translation === 'string') {\n          if (translation.length > 50) {\n            return 'textarea';\n          } else {\n            return 'input';\n          }\n\n          if (scope.global.key.endsWith('image') || scope.global.key.endsWith('image')) {\n            return 'img';\n          } else {\n            return 'link';\n          }\n        } else if (typeof translation === 'object' && scope.global.key.match('slider')) {\n          return 'slider-collection';\n        } else {\n          return 'specs-list';\n        }\n      };\n\n      scope.type = getType(scope.global.translation);\n\n      element.hover(function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = scope.global.key;\n        });\n      }, function() {\n        scope.$apply(function() {\n          HoverField.currentIdentifier = '';\n        });\n      });\n    }\n  };\n\n});","cmsApp.directive('cmsHistory', function(MODULE_BASE, USER_SHOW) {\n\n  return {\n    scope: {\n      'histories': '=cmsHistory'\n    },\n    templateUrl: MODULE_BASE + '/cms-history.html',\n    link: function postLink(scope, element, attrs) {\n      scope.linkBase = USER_SHOW + '/';\n\n      scope.loadMore = function() {\n        scope.$parent.loadMoreHistories()\n          .then(function(histories) {\n            scope.finished = histories.current_page === histories.last_page;\n          });\n      };\n\n      scope.$watch('histories.length', function(newValue) {\n        if (newValue === void 0) {\n          scope.finished = false;\n        }\n      });\n    }\n  };\n\n});","cmsApp.filter('title', function() {\n\n  return function(input) {\n    var pieces = input.split('.');\n    input = pieces[pieces.length - 1];\n    return input.replace(/\\#/g, ' ').titleize();\n  };\n\n});","angular.module(\"elementCmsApp\").run(['$templateCache', function(a) { a.put('/modules/element-cms/views/cms-textarea.html', '<div class=\"input-group\">\\n' +\n    '  <textarea type=\"text\" ng-disabled=\"disabled\" class=\"form-control\" id=\"{{ field.key }}\" ng-model=\"input.value\"></textarea>\\n' +\n    '  <div class=\"input-group-addon btn-info btn\" ng-click=\"history();\">\\n' +\n    '    History\\n' +\n    '  </div>\\n' +\n    '  <div class=\"input-group-addon btn btn-success\" ng-click=\"update();\">\\n' +\n    '    Save\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div cms-history=\"histories\"></div>');\n\ta.put('/modules/element-cms/views/cms-input.html', '<div class=\"input-group\">\\n' +\n    '  <input type=\"text\" class=\"form-control\" id=\"{{ field.key }}\" ng-disabled=\"disabled\" ng-model=\"input.value\">\\n' +\n    '  <div class=\"input-group-addon btn-info btn\" ng-click=\"history();\">\\n' +\n    '    History\\n' +\n    '  </div>\\n' +\n    '  <div class=\"input-group-addon btn-success btn\" ng-click=\"update();\">\\n' +\n    '    Save\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div cms-history=\"histories\"></div>');\n\ta.put('/modules/element-cms/views/cms-history.html', '<ul ng-if=\"histories.length\" class=\"history-list\">\\n' +\n    '  <li ng-repeat=\"history in histories\" class=\"history-list__item\">\\n' +\n    '    <samp ng-bind=\"history.created_at\"></samp>: <a target=\"_blank\" ng-bind=\"history.user\" ng-href=\"{{linkBase + history.user}}\"></a> edited to <span ng-bind=\"history.value\"></span>\\n' +\n    '  </li>\\n' +\n    '  <li>\\n' +\n    '    <a ng-click=\"loadMore();\" ng-if=\"!finished\">Load more</a>\\n' +\n    '  </li>\\n' +\n    '</ul>\\n' +\n    '<div class=\"history-list\" ng-if=\"histories && !histories.length\">\\n' +\n    '  No recent history on this field.\\n' +\n    '</div>');\n\ta.put('/modules/element-cms/views/cms-field.html', '<td class=\"col-sm-3\">\\n' +\n    '  <label for=\"global.key\" ng-bind=\"global.key | title\"></label>\\n' +\n    '</td>\\n' +\n    '<td ng-switch=\"type\" class=\"col-sm-9\">\\n' +\n    '  <div ng-switch-when=\"input\" cms-input=\"global\"></div>\\n' +\n    '  <div ng-switch-when=\"textarea\" cms-textarea=\"global\"></div>\\n' +\n    '</td>');\n\t }]);"],"sourceRoot":"/source/"}